load("chain.pinc", "Chain")
load("//protoconfxds/v1/protoconfxds.proto", "XDSSnapshot")
load(
    "cluster.pinc",
    "Cluster",
    "WithConnectTimeout",
    "WithLbPolicy",
    "RoundRobin",
    "LeastRequest",
    "WithDiscoveryType",
    "DnsDiscovery",
    "LogicalDNS",
    "StrictDNS",
    "WithEndpoint",
    "UpstreamTLS",
)
load("listener.pinc", "Listener", "WithTCP", "WithRdsHTTPRoute", "WithRateLimitDomain")
load(
    "routes.pinc",
    "VirtualHost",
    "Domains",
    "ToCluster",
    "IfPrefix",
    "HostRewrite",
    "DirectResponse",
    "SetRouteRateLimit",
    "SetRouteRateLimitKeyHeader",
)
load(
    "ratelimit.pinc",
    "RateLimit",
    "AddDescriptor",
    "AddPolicy",
    "PerMinute",
    "PerSecond",
    "Replaces",
    "WithName",
)


def Snapshot(*hooks):
    return Chain(XDSSnapshot(), *hooks)


def Debug(msg, next):
    print(msg)
    return next(msg)


xds = struct(
    Snapshot=Snapshot,
    Cluster=Cluster,
    WithConnectTimeout=WithConnectTimeout,
    WithLbPolicy=WithLbPolicy,
    RoundRobin=RoundRobin,
    LeastRequest=LeastRequest,
    WithDiscoveryType=WithDiscoveryType,
    DnsDiscovery=DnsDiscovery,
    StrictDNS=StrictDNS,
    LogicalDNS=LogicalDNS,
    WithEndpoint=WithEndpoint,
    UpstreamTLS=UpstreamTLS,
    Listener=Listener,
    WithTCP=WithTCP,
    WithRdsHTTPRoute=WithRdsHTTPRoute,
    VirtualHost=VirtualHost,
    Domains=Domains,
    ToCluster=ToCluster,
    IfPrefix=IfPrefix,
    HostRewrite=HostRewrite,
    DirectResponse=DirectResponse,
    WithRateLimitDomain=WithRateLimitDomain,
    SetRouteRateLimit=SetRouteRateLimit,
    SetRouteRateLimitKeyHeader=SetRouteRateLimitKeyHeader,
    RateLimit=RateLimit,
    AddDescriptor=AddDescriptor,
    AddPolicy=AddPolicy,
    PerMinute=PerMinute,
    PerSecond=PerSecond,
    Replaces=Replaces,
    WithName=WithName,
    Debug=Debug,
)
